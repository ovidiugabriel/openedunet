= Introduction =

The dispatcher it is the core of the framework. It is responsible to get the request and serve the response to the client (and of course delegate anything in between).

{{{
nulltype import(string name) throws ClassNotFoundException
}}}

Imports a given class using its fully qualified name (but using dot syntax instead of backslash). This mechanism is emulating namespaces on PHP < 5.3.0 - because namespace feature was not provided by the language prior to PHP 5.3.0. In newer version of PHP it is still recommended to use this in order to keep your code  portable.

It has been introduced, to improve bytecode cache performances, as a replacement of the initial Barebone MVC class autoloader. 

{{{
object construct(string name[, false]) throws ClassNotFoundException
}}}

Creates a new instance of the given class using its fully qualified name (but using dot syntax instead of backslash). Note that you have to import the class using *import()* before calling *construct()*. 

{{{
object construct(string name, true) throws ClassNotFoundException, InstantiationException
}}}

To use a _single instance of the type_ you have to pass *true* as second argument to the function. 

Given type is required to implement a mechanism to create and return the instance, either:
  # implement _a function with the same name as the class_ (preferred flavor)
  # otherwise implement _Singleton::instance()_ or _ISingleton::getInstance()_ and _define a private constructor_

*Not implemented yet:* If you request a singleton for a type whose constructor is not private then an *InstantiationException* shall be thrown.

    ClassNotFoundException, IllegalAccessException, InstantiationException, InvocationTargetException, NoSuchFieldException, NoSuchMethodException

{{{
object singleton(string name)
}}}

It is the singleton formal factory method provided by the framework.

{{{
object require_object(string name[, callable callback])
}}}

Creates the required object after it automatically loads the class.

{{{
object require_class(string name[, callable callback])
}}}