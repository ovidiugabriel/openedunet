The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.

==== PSR-0 Autoloading ====

==== PSR-1 Basic Coding ====

  # PHP code MUST use the long `<?php ?>` tags; it MUST NOT use the other tag variations.
  # Code files MUST use only UTF-8
  # Files SHOULD either declare symbols (classes, functions, constants, etc.) or cause side-effects (e.g. generate output, change .ini settings,explicit use of require or include, connecting to external services, mitting errors or exceptions, modifying global or static variables, reading from or writing to a file, etc.) but SHOULD NOT do both.
  # Namespaces and classes MUST follow PSR-0.
  # Class names MUST be declared in `StudlyCaps`

==== PSR-2 Coding Style ====

  # Code MUST use 4 spaces for indenting, not tabs.
  # There MUST NOT be a hard limit on line length; the soft limit MUST be 120 characters;
  # Visibility MUST be declared on all properties and methods; 
  # `abstract` and `final` MUST be declared before the visibility; 
  # The `var` keyword MUST NOT be used to declare a property. 
  # Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility
  # Opening braces for control structures MUST go on the same line, and closing braces MUST go on the next line after the body.
  # All code files MUST use the Unix LF (linefeed) line ending.
  # All code files MUST end with a single blank line.
  # The closing `?>` tag MUST be omitted from files containing only PHP.
   # PHP keywords MUST be in lower case. The PHP constants `true`, `false`, and `null` MUST be in lower case.
  # The `extends` and `implements` keywords MUST be declared on the same line as the class name.
  # Lists of implements MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one interface per line.
  # In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.
  # Method arguments with default values MUST go at the end of the argument list.
  # Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line.

==== PSR-3 Logger Interface ====


==== PSR-4 Improved Autoloading ====

==== Aditional (specific to BareboneMVC) ====

  # Usage of `static` methods and `static` local variables is discouraged. Make sure you have an object oriented or a functional design before using `static`. And make sure you are not forcing procedural style by using `static` in excess.